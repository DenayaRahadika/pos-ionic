{"version":3,"sources":["../../src/pages/list-supervidores/list-supervidores.module.ts","../../src/pages/list-supervidores/list-supervidores.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ListSupervidoresPage } from './list-supervidores';\n\n@NgModule({\n  declarations: [\n    ListSupervidoresPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ListSupervidoresPage),\n  ],\n})\nexport class ListSupervidoresPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-supervidores/list-supervidores.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, MenuController, Loading, LoadingController, AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { Network } from '@ionic-native/network';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { SupervisoresProvider } from '../../providers/supervisores.service';\n\n@IonicPage()\n@Component({\n  selector: 'page-list-supervidores',\n  templateUrl: 'list-supervidores.html',\n})\nexport class ListSupervidoresPage {\n\n  listsSupervisores: any[] = [];\n  supervisores: any = {};\n  fecha: string;\n  imeiCel: string;\n  subscriptions: Subscription[] = [];\n  load: Loading;\n\n  constructor(\n    private navCtrl: NavController,\n    private menuCtrl: MenuController,\n    private alertCtrl: AlertController,\n    private loadCtrl: LoadingController,\n    private supervisorService: SupervisoresProvider,\n    private storage: Storage,\n    private network: Network\n  ) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ListSupervidoresPage');\n    this.load = this.loadCtrl.create({\n      content: 'Cargando...'\n    });\n    this.load.present();\n    const subscriptionFechaServidor = this.supervisorService.getFechaServidor()\n    .valueChanges()\n    .subscribe((data: any) => {\n      this.fecha = data.fecha;\n      this.checkImei();\n    });\n    this.subscriptions.push(subscriptionFechaServidor);\n    this.verificarInternet();\n    this.getVendedores();\n    this.load.dismiss();\n  }\n\n  ionViewDidEnter() {\n    this.menuCtrl.enable(true, 'menuAdmin');\n    this.supervisorService.stopGetSupervisorAllOnline();\n  }\n\n  ionViewDidLeave() {\n    this.subscriptions.forEach((subscription) => {\n      subscription.unsubscribe();\n    });\n    this.supervisorService.stopGetSupervisorAllOnline();\n  }\n\n  goToMapPage(vendedor) {\n    if (vendedor.hora === '00:00:00') {\n      const alert = this.alertCtrl.create({\n        title: 'Vendedor',\n        subTitle: 'No hay datos',\n        buttons: ['OK']\n      });\n      alert.present();\n    }else {\n      const key = vendedor.imei;\n      const name = vendedor.nombreVendedor;\n      this.navCtrl.push('map', {\n        key: key,\n        name: name\n      });\n    }\n  }\n\n  private checkImei() {\n    this.storage.get('imei')\n    .then(imei => {\n      // console.log('imei llego', imei);\n      this.imeiCel = '359825061511512';\n      this.imeiCel = imei;\n      this.getVendedores();\n    });\n  }\n\n  private getVendedores() {\n    const subscriptionVendedorAllChannel = this.supervisorService.getVendedorAllChannel()\n    .subscribe(vendedor => {\n      if (vendedor !== null) {\n        console.log('vendedores', vendedor);\n        if (this.supervisores.hasOwnProperty(vendedor.imei)) {\n          const vendedorActual = this.supervisores[vendedor.imei];\n          vendedor.posicion = vendedorActual.posicion;\n          this.listsSupervisores[vendedorActual.posicion] = vendedor;\n        }else {\n          vendedor.posicion = this.listsSupervisores.length;\n          this.supervisores[vendedor.imei] = vendedor;\n          this.listsSupervisores.push(vendedor);\n        }\n        this.storage.set('vendedoresList', JSON.stringify(this.supervisores));\n      }\n    });\n    this.subscriptions.push(subscriptionVendedorAllChannel);\n    // getVendedorAllOnline va estricamente despues de getVendedorAllChannel\n    this.supervisorService.getVendedorAll(this.imeiCel, this.fecha);\n  }\n\n  private verificarInternet() {\n    if (this.network.type === 'none') {\n      console.log(this.network.type);\n      const alert = this.alertCtrl.create({\n        title: 'Sin conexi√≥n',\n        subTitle: 'Lista sin actualizar',\n        buttons: ['OK']\n      });\n      alert.present();\n    }else {\n      // Si tiene conexion verifica conexion con firebase\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list-supervidores/list-supervidores.ts"],"sourceRoot":""}